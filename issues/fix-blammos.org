# -*- mode: org; mode: auto-fill; fill-column: 80 -*-

#+TITLE: Fix the Blammos!
#+OPTIONS:   d:t
#+LINK_UP:  ./
#+LINK_HOME: ../

* Issue

  There are Blammos.  They point to significant failings in the code and must be
  fixed before the code is used by others.  Fortunately, they exist only within
  the HTTP connector and apply only to non-Tor-Hidden-Service connections.

* Fixes [1/2]

** DONE Remove GET, use POST [2/2]
   CLOSED: [2012-09-11 Tue 08:38]

   Seriously.  I did it right in [[file:../src/connectors/https/controller.py::if%20action%20%3D%3D%20"POST":][HTTPS Connector::420]].

*** DONE [[file:../src/connectors/https/controller.py::#%20FIXME%20Blammo!][HTTPS Connector::78]] Only allow POST.
    CLOSED: [2012-09-11 Tue 08:38]

*** DONE [[file:../src/connectors/https/controller.py::#%20FIXME%20Blammo!%20This%20must%20be%20a%20post.%20Use%20httplib%20right.][HTTPS Connector::126]] POST requests, don't GET them.
    CLOSED: [2012-09-09 Sun 16:01]

*** References

    - [[https://webcache.googleusercontent.com/search?q=cache:http%3A%2F%2Fwww.jmarshall.com%2Feasy%2Fhttp%2F%23postmethod]]

    - [[https://en.wikipedia.org/wiki/POST_%28HTTP%29]]

    - [[http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html]]

    - [[http://www.w3.org/2001/tag/doc/whenToUseGet.html]]

    - [[https://en.wikipedia.org/wiki/Post/Redirect/Get]]

** TODO Use httplib2 to proxy and check certificates. [1/2]

   #+begin_src python :results output
     import httplib2, socks
     from pprint import pprint

     socks5_proxy = httplib2.ProxyInfo(socks.PROXY_TYPE_SOCKS5, "192.168.0.12", 9050)
     http_proxy = httplib2.ProxyInfo(socks.PROXY_TYPE_HTTP, "192.168.0.12", 8123)

     connection = httplib2.Http(http_proxy)

     pprint(help(connection.request))
     pprint(connection.request("https://google.com", "GET"))
   #+end_src

*** DONE [[file:../src/connectors/https/controller.py::117][HTTPS Connector::117]] Make sure HTTPS connection is secure
    CLOSED: [2012-09-23 Sun 17:31]

    I might need both a key and a cert verified correctly.  Figure out how to
    use httplib.HTTPSConnection correctly.

    As in the [[file:16.org][interprocess-communication]] issue, this can be considered a
    security hole, given how the ~httplib.HTTPSConnection~ doesn't validate the
    certificates.  So, you could easily, accidentally, and unknowingly connect
    to an untrusted server.

    To do this safely, I need to make sure the certificates are in the
    certificate store.  How do we handle that going forward?  I've just added
    another data point that needs to be exchanged, unless we accept TOFU.

*** TODO [[file:../src/connectors/https/controller.py::122][HTTPS Connector::122]] Make sure connections are appropriately proxied

    I'm certain there are other proxying functions, but I don't recall them.
    Python supported proxying before version 2.7, and that's just stupid and
    broken.

    +Perhaps I should just avoid proxying for now, until I figure out the proxying
    and searching issues.+  We're talking about HTTP proxying, not request
    proxying, so, yes, this needs to be solved.

**** [2012-09-23 Sun]
     CLOCK: [2012-09-23 Sun 14:37]--[2012-09-23 Sun 17:33] =>  2:56

     This is mostly complete, but there's bitrot or version skew in [[file:../src/connectors/https/controller.py::#%20FIXME%20Fix%20proxying.%20There's%20bitrot%20or%20version%20skew%20here.][the HTTP
     controller::117]].

*** References

    - https://code.google.com/p/httplib2/wiki/Examples
    - http://code.activestate.com/recipes/301740-simplest-useful-https-with-basic-proxy-authenticat/
    - http://bitworking.org/projects/httplib2/ref/httplib2-example.html
    - http://httplib2.googlecode.com/hg/doc/html/libhttplib2.html
    - http://viraj-workstuff.blogspot.com/2011/07/python-httplib2-certificate-verify.html
    - https://pwnetics.wordpress.com/2012/02/06/ssl-certificate-verification-and-httplib2/

* Discussion

* Metadata
  :PROPERTIES:
  :Status:   Incomplete
  :Priority: 100
  :Owner:    Nick Daly
  :Blocking: [[file:17.org][Field Testing]]
  :Tags:     Security
  :Description:     Blammo
  :END:
